openapi: '3.1.0'
info:
  title: Customers API
  version: '1.0.0'
servers:
  - url: 'http://localhost:3001'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        phone:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
    CustomerCreate:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
    CustomerUpdate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
paths:
  /health:
    get:
      responses:
        '200':
          description: OK
  /customers:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: cursor
          schema:
            type: integer
            minimum: 1
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: OK
    post:
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /customers/{id}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Not Found
    put:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdate'
      responses:
        '200':
          description: Updated
        '404':
          description: Not Found
    delete:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /internal/customers/{id}:
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: 'Bearer SERVICE_TOKEN'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Not Found